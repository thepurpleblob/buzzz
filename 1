<?php
/************************************
 * Buzzz Job Management System
 *
 * Copyright, Howard Miller 2008
 *
 * Individual Job Report
 ************************************/

// report classes extend this
class report_individual extends report {

    var $description = "Job report";
    var $jobdata = null;
    var $costdata = null;

    function getdescription() {
        return $this->description;
    }

    function setupform() {
        // select job
        global $db;

        $sql = "select id,concat(jobnumber,' ',projectname) as jobdesc ".
            " from job order by jobnumber desc";
        $jobs = $db->query( $sql ); 
        $options = lib::records2options( $jobs,'id','jobdesc' );

        $elements = array(
            'id' => array(
                'type' => 'select',
                'title' => 'Select job',
                'options' => $options
                ),
            );
        return $elements;
    }

    // method to get the report data
    function getdata() {
        global $db;

        $jid = lib::required_param( 'id' );
    
        $sql = "select * from job,company where job.companyid = company.id ".
            "and job.id = $jid";
        $data = $db->query( $sql,true );

        // format the data
        $data->totalmargin = number_format($data->totalmargin,2);
        $data->totalactualmargin = number_format($data->totalactualmargin,2);
        $data->totalchargeout = number_format($data->totalchargeout,2);
        $data->totalprojectcost = number_format($data->totalprojectcost,2);
        $data->variance = number_format($data->variance,2);

        // get the jobcost data
        $costdata = $db->get_records( 'jobcost','jobid',$jid );

        // format the data
        foreach ($costdata as $row) {
            $row->amount = number_format( $row->amount,2 );
            $row->actual = number_format( $row->actual,2 );
        }

        // we just store all this locally as the report is custom
        $this->jobdata = $data;
        $this->costdata = $costdata;

        return false;
    }

    // custom report format
    function customformat() {
        $data = $this->jobdata;
        $costdata = $this->costdata;

        $e =  "<div id=\"pr_jsheader\"><img src=\"pix/buzzzlogo_mono.png\">";
        $e .= "<h2>JOB SHEET</h2></div>\n";

        // job detail
        $e .= "<div class=\"pr_jsbox\">";
        $e .= "<table>\n";
        $e .= "<tr><th>Job Detail</th><th>{$data->jobnumber}</th></tr>\n";
        $e .= "<tr><th>&nbsp;</th><th>{$data->projectname}</th></tr>\n";
        $e .= "<tr><th>&nbsp;</th><th>{$data->jobdescription}</th></tr>\n";
        $e .= "</table></div>\n";

        // client details
        $e .= "<div class=\"pr_jsbox\">";
        $e .= "<table>\n";
        $e .= "<tr><th>Client Details</th><td>{$data->name}</td></tr>\n";
        $e .= "</table></div>\n";

        return $e;
    }

    // return columns for default display
    function getcolumns() {
        $cols = array('jobnumber','name','datentered','projectname',
            'totalchargeout','totalprojectcost','totalmargin','reasonforfail');
        return $cols;
    }

    // get the headings for display
    function getheadings() {
        return array( 'Job number','Client','Date created','Job title',
            'Total revenue','Total estm costs','Total estm margin','Reason for fail' );
    }

    // return totals
    function gettotals() {
        $totals = array();
        $totals[ 'Estimated margins' ] = number_format( $this->totalmargin,2 );
        $totals[ 'Revenue' ] = number_format( $this->totalchargeout,2 );
        $totals[ 'Estimated costs' ] = number_format( $this->totalprojectcost,2 );
        return $totals;
    }

}

?>
